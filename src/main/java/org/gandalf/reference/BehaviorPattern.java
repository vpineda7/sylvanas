package org.gandalf.reference;

public class BehaviorPattern {
	
	/**
	 * 观察者模式
	 * 
	 * 监听器
	 */
	
	/**
	 * 迭代器模式
	 * 
	 * JAVA迭代器
	 */
	
	/**
	 * 命令模式
	 * 
	 * 电视机遥控器
	 */
	
	/**
	 * 策略模式
	 * 
	 * 完成一项任务，往往可以有多种不同的方式，每一种方式称为一个策略
	 */
	
	/**
	 * 责任链模式
	 * 
	 * 异常处理，拦截器，过滤器，事件冒泡
	 */
	
	/**
	 * 解释器模式
	 * 
	 * 编译器
	 */
	
	/**
	 * 中介者模式
	 * 
	 * 链家地产，虚拟聊天室
	 */
	
	/**
	 * 备忘录模式
	 * 
	 */
	
	/**
	 * 模板模式
	 * 
	 * 顾名思义，就是模版
	 */
	
	/**
	 * 访问者模式
	 * 
	 */
	
	/**
	 * 状态模式
	 * 
	 * 一个对象的行为取决于一个或多个动态变化的属性
	 */
}
